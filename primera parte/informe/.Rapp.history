anova_cluster2FA <- lm(permanence ~ fit$scores )
discrim_cluster2FA <- lda(permanence ~ fit$scores )  ##analisis discriminante lineal (lda)
cluster4_FA ~ fit$scores
discrim_cluster2FA
anova_cluster2FA <- lm(permanence ~ fit$scores )
anova(anova_cluster2FA)
discrim_cluster2FA.prediction <- predict(discrim_cluster2FA)$class
table(permanence, discrim_cluster2FA.prediction, dnn = c('Actual Group','Predicted Group'))
nrows<-length(datos$cluster2_FA)
nrows<-length(datos$cluster4_FA)
nrows
discrim_cluster2PCA <- lda(cluster4_PCA ~ Factor1+Real_GDP_SD)  ##analisis discriminante lineal (lda)
res.pca$x
res.pca$x[,1:4]
discrim_cluster2PCA <- lda(cluster4_PCA ~ res.pca$x[,1:4])  ##analisis discriminante lineal (lda)
discrim_cluster2PCA
anova_cluster2PCA <- lm(cluster4_PCA ~ res.pca$x[,1:4])
anova(anova_cluster2PCA)
discrim_cluster2PCA.prediction <- predict(discrim_cluster2PCA)$class
table(cluster4_PCA, discrim_cluster2PCA.prediction, dnn = c('Actual Group','Predicted Group'))
nrows<-length(datos$cluster2_PCA)
percen
percent
percentaje<-sum(discrim_cluster2PCA.prediction == datos$cluster2_PCA)/nrows
percentaje
percentaje<-sum(discrim_cluster2PCA.prediction == cluster4_PCA)/nrows
percentaje
table(permanence, discrim_cluster2PCA.prediction, dnn = c('Actual Group','Predicted Group'))
percentaje<-sum(discrim_cluster2PCA.prediction == permanence)/nrows
percentaje
estandarizar<-function(x){#
for (i in 7:length(x)) {   ##transformar datos a datos positivos #
 x[i]=dates[i]-min(dates[i])  #para poner todos los datos positivos #
 #x[i]<- (x[i]-min(x[i]))/(max(x[i])-min(x[i]))  #para poner todos los datos de 0 a 1 #
  }#
  return (x+1)#
  }
setwd('/Users/nesdav/Documents/estadisticamultivariada/informe') ## put working directory
getwd()
datos<-read.csv(file="data.csv",header=T, sep=";") #the data is read
attach(datos)
head(datos)
dim(datos)
dates=datos
x=dates
x=estandarizar(datos)
estandarizar<-function(x){#
for (i in 7:length(x)) {   ##transformar datos a datos positivos #
 x[i]=dates[i]-min(dates[i])  #para poner todos los datos positivos #
 #x[i]<- (x[i]-min(x[i]))/(max(x[i])-min(x[i]))  #para poner todos los datos de 0 a 1 #
  }#
  return (x)#
  }
x=estandarizar(datos)
x <- subset( x, select = -Longitud ) ##saco la var long por que no aporta nada
x <- subset( x, select = -BNT ) ##Saco la var BNT por que no aporta
datanum<-x[,c(7:33)]  #Cojo solo las variables
datanum=datanum+1
boxplot(datanum)
summary(datanum$P)
max(datanum$P)
which(datanum$ADIm3==max(datanum$ADIm3))
library(ggplot2)
qplot(datanum$P,geom="density") #Density trace
shapiro.test(datanum$P)$p.value
library(ggcorrplot)
correlationanalisis<-function(datanum){#
    corr_matrix<-cor(datanum) ## saca matrices de correlaciones #
    corr_matrix#
       library(ggcorrplot)   #para grafico de correlaciones #
    ggcorrplot(corr_matrix,lab = TRUE, lab_size=2)#
    }
correlationanalisis(datanum)
ADI4=datanum$ADIm4
x <- subset( x, select = -ADIm4 ) ##Saco la var BNT por que no aporta
correlationanalisis(datanum)
x
datanum <- subset( datanum, select = -ADIm4 ) ##Saco la var BNT por que no aporta
correlationanalisis(datanum)
datanum <- subset( datanum, select = -ADI ) ##Saco la var BNT por que no aporta
correlationanalisis(datanum)
ADI=x$ADI
correlationanalisis(datanum)
a=0#
b=0#
datanum#
datanum=datanum-1   #
datanum#
 for(i in 1:length(datanum)){#
  a[i]=ks.test(datanum[,i],pnorm)$p.value#
  b[i]=shapiro.test(datanum[,i])$p.value#
 }#
a
b
for(i in 1:length(datanum)){#
  a[i]=ks.test(log(datanum[,i]),pnorm)$p.value#
  b[i]=shapiro.test(log(datanum[,i]))$p.value#
 }
a#
b
summary(datanum)
datanum=datanum+1
summary(datanum)
for(i in 1:length(datanum)){#
  a[i]=ks.test(datanum[,i],pnorm)$p.value#
  b[i]=shapiro.test(datanum[,i])$p.value#
 }
a#
b
for(i in 1:length(datanum)){#
  a[i]=ks.test(log(datanum[,i]),pnorm)$p.value#
  b[i]=shapiro.test(log(datanum[,i]))$p.value#
 }
a#
b
library(GPArotation)#
#library(Rgraphviz)#
library(stats)#
library(car) #
library(MASS)
powerTransform(datanum[i])
for(i in 1:length(datanum)){#
  a[i]=powerTransform(datanum[i])#
 }
a
for(i in 1:length(datanum)){#
  print(powerTransform(datanum[i]))#
 }
boxcoxTransform(datanum[1])
library(EnvStats)
boxcoxTransform(datanum[1])
boxcoxTransform(datanum[1]=1)
boxcoxTransform(datanum[1]+1)
datanum[1]
boxcoxTransform(datanum$P, lambda = 0.5)
boxcoxTransform(datanum[1], lambda = 0.5)
boxcoxTransform(datanum$ACItf, lambda = -1.5)
shapiro.test(boxcoxTransform(datanum$ACItf, lambda = -1.5))
datanum$ACItf=boxcoxTransform(datanum$ACItf, lambda = -1.5)
shapiro.test(datanum[1])
shapiro.test(datanum[,1])
boxcoxTransform(datanum[,2], lambda = -1.5)
shapiro.test(boxcoxTransform(datanum[,2], lambda = -1.5))
shapiro.test(boxcoxTransform(datanum[,2], lambda = 0.35))
datanum[,2]=boxcoxTransform(datanum[,2], lambda = -1.5)
shapiro.test(boxcoxTransform(datanum[,2])
)
shapiro.test(boxcoxTransform(datanum[,2], lambda = 0.35))
shapiro.test(boxcoxTransform(datanum[,2], lambda = 0.35))
boxcoxTransform(datanum[,2], lambda = 0.35)
datanum[,2]=boxcoxTransform(datanum[,2], lambda = -1.5)
shapiro.test(boxcoxTransform(datanum[,i], lambda = 0.4.281918))
shapiro.test(boxcoxTransform(datanum[,i], lambda = 0.4281918))
i=3
shapiro.test(boxcoxTransform(datanum[,i], lambda = 0.4281918))
shapiro.test(boxcoxTransform(datanum$TE, lambda = 0.4281918))
powerTransform(datanum[3])
shapiro.test(boxcoxTransform(datanum$TE, lambda = 4.281918))
powerTransform(datanum[3])
shapiro.test(boxcoxTransform(datanum$TE, lambda = 4.281918)) ##no normalizo
shapiro.test(boxcoxTransform(datanum[,4], lambda = powerTransform(datanum[4])))
powerTransform(datanum[4])
powerTransform(datanum[4])$lam
a=powerTransform(datanum[4])$lam
a\
a
a=powerTransform(datanum[4], family="bcPower")
a
a$value
a$lambda
a$roundlam
a$llik
shapiro.test(boxcoxTransform(datanum[,4], lambda = 2.448185))
datanum[,4]=boxcoxTransform(datanum[,4], lambda =2.448185 )
i=5#
lam=-0.2624729 #
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam))#
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=6#
lam=-1.503145 #
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #no normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=4#
lam=-28.8#
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam))
i=4#
lam=-28.8#
 shapiro.test(boxcoxTransform(x$ESM, lambda = lam))
i=4#
lam=-28.8#
 shapiro.test(boxcoxTransform(x$ESM+1, lambda = lam))
datanum[,6]
datanum$P
summary(datanum)
powerTransform(datanum[6])
powerTransform(datanum[6]+1)
shapiro.test(boxcoxTransform(datanum[,i], lambda = -0.6360587)) #no normalizo
shapiro.test(boxcoxTransform(datanum[,6]+1, lambda = -0.6360587)) #no normalizo
i=6
datanum[,i]=boxcoxTransform(datanum[,i], lambda =-0.6360587 )
datanum[,i]=boxcoxTransform(datanum[,i]+1, lambda =-0.6360587 )
powerTransform(datanum[6])
+1
powerTransform(datanum[6]+1)
shapiro.test(boxcoxTransform(datanum[,6]+1, lambda = 0.4562339)) #no normalizo
ks.test(datanum[,i],pnorm)
i=7#
lam=1.345752 #
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #no normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=8#
lam=-1.675795 #
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #no normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=9#
lam= -0.6085784 #
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=10#
lam= 0.1459998 #
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=11#
lam= -0.4001876  #
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) # no normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=12#
lam= 3.077213#
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) # no normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=13#
lam= 2.700834 #
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #  normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=14#
lam= 1.439215#
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #  normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=15#
lam= -11.34631 #
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #  no normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=16#
lam= 3.255794 #
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #  no normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=17#
lam= 3.750699 #
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #  no normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=18#
lam= 3.053014  #
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #   normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=19#
lam= 3.182688#
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #   normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=20#
lam= 2.313529#
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #   normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=21#
lam= 2.079209#
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #   normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=23#
lam= 2.908557#
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #   normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=24#
lam= 3.753213#
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #   normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
i=25#
lam= 4.224592 #
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #   normalizo #
 datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )
for(i in 1:length(datanum)){#
  a[i]=ks.test(datanum[,i],pnorm)$p.value#
  b[i]=shapiro.test(datanum[,i])$p.value#
 }
a
a
head(datanum)
for(i in 1:length(datanum)){#
  a[i]=ks.test(datanum[,i],pnorm)$p.value#
  b[i]=shapiro.test(datanum[,i])$p.value#
 }
a
b
for(i in 1:length(datanum)){#
  a[i]=ks.test(datanum[,i],pnorm)$p.value#
  b[i]=shapiro.test(datanum[,i])$p.value#
 }#
a#
b
for(i in 1:length(datanum)){#
  a[i]=ks.test(datanum[,i],pnorm)$p.value}
a
for(i in 1:length(datanum)){#
  a[i]=ks.test(log(datanum[,i]),pnorm)$p.value#
  b[i]=shapiro.test(log(datanum[,i]))$p.value#
 }
a#
b
for(i in 1:length(datanum)){#
  a[i]=ks.test(datanum[,i],pnorm)$p.value#
  b[i]=shapiro.test(datanum[,i])$p.value#
 }
a
b
ks.test(datanum[,5],pnorm)$p.value
ks.test(datanum[,6],pnorm)$p.value
ks.test(datanum[,7],pnorm)$p.value
ks.test(datanum[,10],pnorm)$p.value
ks.test(datanum[,11],pnorm)$p.value
ks.test(datanum[,14],pnorm)$p.value
ks.test(datanum[,15],pnorm)$p.value
ks.test(datanum[,16],pnorm)$p.value
powerTransform(datanum[5])
powerTransform(datanum[5]+1)
powerTransform(datanum[6]+1)
powerTransform(datanum[7]+1)
powerTransform(datanum[10]+1)
powerTransform(datanum[11]+1)
powerTransform(datanum[14]+1)
powerTransform(datanum[15]+1)
powerTransform(datanum[16]+1)
i=5#
lam= 0.7075973#
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #no normalizo #
 #datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )#
#
i=6#
lam=-0.4562339#
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #no normalizo #
 #datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )#
 i=7#
lam= 1.178336#
 shapiro.test(boxcoxTransform(datanum[,i], lambda = lam)) #no normalizo
i=5#
lam= 0.7075973#
 shapiro.test(boxcoxTransform(datanum[,i]+1, lambda = lam)) #no normalizo #
 #datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )#
#
i=6#
lam=-0.4562339#
 shapiro.test(boxcoxTransform(datanum[,i]+1, lambda = lam)) #no normalizo #
 #datanum[,i]=boxcoxTransform(datanum[,i], lambda =lam )#
 i=7#
lam= 1.178336#
 shapiro.test(boxcoxTransform(datanum[,i]+1, lambda = lam)) #no normalizo
boxplot(datanum)
shapiro.test(datanum[,20])
shapiro.test(log(datanum[,20])
)
shapiro.test(log(datanum[,20]+1))
correlationanalisis(datanum)
shapiro.test(ADI)
shapiro.test(ADIm4)
shapiro.test(log(ADIm4)
)
ADIm4
shapiro.test(log(ADIm4+1))
shapiro.test(log(ADIm4))
ADIm4=log(ADIm4)
ADIm4
x$ADIm4
dates$ADIm4
ADIm4=dates$ADIm4
ADIm4-mean(ADIm4)
ADIm4=dates$ADIm4
ADIm4-min(ADIm4)
ADIm4=ADIm4-min(ADIm4)
shapiro.test(log(ADIm4))
ADIm4
ADIm4=ADIm4+1
shapiro.test(log(ADIm4))
shapiro.test(ADIm4)
powerTransform(ADIm4)
shapiro.test(boxcoxTransform(ADIm4, lambda = 2.662579 )) #no normalizo
ADIm4=boxcoxTransform(ADIm4, lambda = 2.662579 )
write.csv2(ADIm4, file="/Users/nesdav/Downloads/ESTADISTICAREDUCCION/dataADIm4.csv",row.names=F)
write.csv2(ADIm4, file="dataADIm4.csv",row.names=F)
write.csv2(datanum, file="datanum.csv",row.names=F)
write.csv2(ADI, file="dataADI.csv",row.names=F)
corr_matrix<-cor(datosnormfil) ## saca matrices de correlaciones #
    corr_matrix
corr_matrix<-cor(datanum) ## saca matrices de correlaciones #
    corr_matrix
write.csv2(correlationmatrix, file="correlationmatrixdatanum.csv",row.names=F)
write.csv2(corr_matrix, file="correlationmatrixdatanum.csv",row.names=F)
res.eig <- eigen(corr_matrix)#
res.eig
head(res.eig)
correlationanalisis(datanum)
res.pca <- prcomp(datosnormfil, scale = TRUE)#
res.pca
datanum=datosnormfil
datanum<-read.csv(file="datanum.csv",header=T, sep=";") #the data is read
attach(datanum)#
head(datanum)
datosnormfil=datanum
res.pca <- prcomp(datosnormfil, scale = TRUE)
head(datanum)
datosnormfil=datanum
res.pca <- prcomp(datosnormfil, scale = TRUE)
