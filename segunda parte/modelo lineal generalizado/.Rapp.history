install.packages("lmtest")
library(lmtest)#
library(normtest)#
library(randtests)#
library(car)#
library(rsq)
install.packages("rsq")
datos<-read.csv(file=file.choose(),header=T,sep=';')
attach(datos)
head(datos)
ks.test(price,pnorm,mean(price),sd(price))
powerTransform(price)
priceT<-(price)^-1.4
MLG <- glm(priceT ~ Factor1 +Factor2 +Factor3 +foreign )  #en este caso foreign es categorica
summary(MLG)
anova(MLG)
predict(MLG, type="response") # predicted values
MLG
install.packages('knitr')
knit
datos<-read.csv(file=file.choose(),header=T,sep=';')
attach(datos)
head(datos)
datos<-read.csv(file=file.choose(),header=T,sep=';')
head(datos)
datos<-read.csv(file=file.choose(),header=T,sep=';')
head(datos)
attach(datos)
head(datos)
head(datos)
datos<-read.csv(file=file.choose(),header=T,sep=',')
attach(datos)
head(datos)
datos[,c(1)]
attach(datos)
MLG <- glm(priceT ~ Factor1 +Factor2 +Factor3 +foreign )  #en este caso foreign es categorica
ACI
ACIft
datos[,c(3:5)]
length(datos)
head(datos[,c(1:28)])
x<-datos[,c(1:28)]
bartlett.test(x)
res.pca <- prcomp(datos[,c(1:28)], scale = TRUE)
res.pca$x[,1:4]
x=datos
for (i in 3:length(x)) {   ##transformar datos a datos positivos #
 #datos[i]=dates[i]-min(dates[i])  #para poner todos los datos positivos #
 x[i] = (x[i]-min(x[i]))/(max(x[i])-min(x[i])).  #para poner todos los datos de 0 a 1 #
  }
for (i in 3:length(x)) {   ##transformar datos a datos positivos #
 #datos[i]=dates[i]-min(dates[i])  #para poner todos los datos positivos #
 x[i] = (x[i]-min(x[i]))/(max(x[i])-min(x[i]))  #para poner todos los datos de 0 a 1 #
  }
head(x)
correlationanalisis<-function(datanum){#
    corr_matrix<-cor(datanum) ## saca matrices de correlaciones #
    corr_matrix#
       library(ggcorrplot)   #para grafico de correlaciones #
    ggcorrplot(corr_matrix,lab = TRUE, lab_size=2)#
    }
correlationanalisis(x)
x=datos[,c(1:28)]
for (i in 3:length(x)) {   ##transformar datos a datos positivos #
 #datos[i]=dates[i]-min(dates[i])  #para poner todos los datos positivos #
 x[i] = (x[i]-min(x[i]))/(max(x[i])-min(x[i]))  #para poner todos los datos de 0 a 1 #
  }
correlationanalisis(x)
y=target
y
correlationanalisis(x)
res.pca <- prcomp(x, scale = TRUE)
scree.plot(res.pca) #screeplot
library(factanal)#
library(psy)#
library(nFactors)#
library(GPArotation)#
library(Rgraphviz)#
library(stats)
scree.plot(res.pca) #screeplot
res.pca <- prcomp(x, scale = TRUE)
res.pca$x[,1:4]
var<-get_pca_var(res.pca)
> library(ggcorrplot)
library(ggcorrplot)
ggcorrplot(corr_matrix)
get_pca_var(res.pca)
library(stats)
library(psy)#
library(factoextra)#
library(car)
res.pca <- prcomp(datos_cont, scale = TRUE)
get_pca_var(res.pca)
get_eig(res.pca)#tabla de eigenvalores varianza acumulada
get_eig(res.pca)#tabla de eigenvalores varianza acumulada
y
varpca=res.pca$x[,1:4]
MLG <- glm(y ~ varpca )  #en este caso foreign es categorica
summary(MLG)
MLG <- glm(y ~ varpca[,c(1:3)] )  #en este caso foreign es categorica
summary(MLG)
x<-varpca[,c(1:3)]
bartlett.test(x)
x
bartlett.test(x)
x<-datos[,c(1:28)]
bartlett.test(x)
white.test(x=varpca,y=log(price))
library(EnvStats)
white.test(x=varpca,y=log(price))
library(snpar)
runs.test(x)
white.test(x=varpca,y=y)
bartlett.test(x)
bartlett.test(varpca)
reset(MLG)
runs.test(residMLG)
anova(MLG)
summary(MLG)
anova(MLG)
predict(MLG, type="response") # predicted values
residMLG<-residuals(MLG, type="deviance") # residuals
rsq(MLG)   ##Este Rcuadrado es el quasi rcuadrado, el 52% es aceptable
library(rsq)
rsq(MLG)   ##Este Rcuadrado es el quasi rcuadrado, el 52% es aceptable
rsq(MLG,adj=TRUE)
reset(MLG)
varpca=res.pca$x[,1:6]
head(datos)
correlationanalisis(varpca)
MLG <- glm(y ~ varpca[,c(1:6)] )  #en este caso foreign es categorica
summary(MLG)
MLG <- glm(y ~ varpca[,c(1:3)] )  #en este caso foreign es categorica
summary(MLG)
anova(MLG)
predict(MLG, type="response") # predicted values
residMLG<-residuals(MLG, type="deviance") # residuals
rsq(MLG)   ##Este Rcuadrado es el quasi rcuadrado, el 52% es aceptable
reset(MLG)
runs.test(residMLG)
x<-datos[,c(17:28)]
bartlett.test(x)
datos[,c(17:28)]
x<-datos[,c(18:28)]
bartlett.test(x)
x[,18:28]
x=datos[,c(18:28)]
correlationanalisis(x)
res.pca <- prcomp(x, scale = TRUE)
var<-get_pca_var(res.pca)
get_pca_var(res.pca)
get_eig(res.pca)#tabla de eigenvalores varianza acumulada
anova(x)
varpca=res.pca$x[,1:3]
var<-get_pca_var(res.pca)
correlationanalisis(varpca)
MLG <- glm(y ~ varpca[,c(1:3)] )  #en este caso foreign es categorica
summary(MLG)
anova(MLG)
reset(MLG)
runs.test(residMLG)
jb.norm.test(residMLG, nrepl=2000)
residMLG<-residuals(MLG, type="deviance") # residuals
rsq(MLG)   ##Este Rcuadrado es el quasi rcuadrado, el 52% es aceptable
rsq(MLG,adj=TRUE)
MLG <- glm(y ~ varpca[,c(1:3)] , family = "binomial")  #en este caso foreign es categorica
help(gml)
??gml
??glm
MLG <- glm(y ~ varpca[,c(1:3)] , family=binomial(link=logit))  #en este caso foreign es categorica
MLG <- glm(y ~ varpca[,c(1:3)] )  #en este caso foreign es categorica
